name: Build
on:
  push:
  workflow_dispatch:
env:
    BUILD_PLATFORM: ""

jobs:

  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: output matrix
        id: set-matrix
        run: bash .github/scripts/get-matrix.sh

  build-amd64:
    needs: get-matrix
    if: ${{ !contains(github.event.head_commit.message, 'skip-build') && contains(needs.get-matrix.outputs.matrix, 'linux/amd64') }}
    name: Build amd64
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prep
        id: prep
        run: bash .github/scripts/prep-environment.sh
        env:
          PLATFORM: ${{ matrix.platform }}
          TAGS: ${{ matrix.tags }}
          FILE: ${{ matrix.file }}

      - name: Set up QEMU
        if: steps.prep.outcome == 'success'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.prep.outcome == 'success'
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        if: steps.prep.outcome == 'success'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: "${{ steps.prep.outputs.key }}-buildx-${{ github.sha }}-20220222"
          restore-keys: "${{ steps.prep.outputs.key }}-buildx-${{ github.sha }}-20220222"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build specific arch
        if: matrix.platform != 'multi' && steps.prep.outcome == 'success'
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ./Dockerfile_${{ matrix.file }}
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.prep.outputs.ptags }}
          build-args: ${{ matrix.build_args }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  build-arm64:
    needs: get-matrix
    if: ${{ !contains(github.event.head_commit.message, 'skip-build') contains(needs.get-matrix.outputs.matrix, 'linux/arm64') }}
    name: Build arm64
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.get-matrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prep
        id: prep
        run: bash .github/scripts/prep-environment.sh
        env:
          PLATFORM: ${{ matrix.platform }}
          TAGS: ${{ matrix.tags }}
          FILE: ${{ matrix.file }}

      - name: Set up QEMU
        if: steps.prep.outcome == 'success'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: steps.prep.outcome == 'success'
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        if: steps.prep.outcome == 'success'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: "${{ steps.prep.outputs.key }}-buildx-${{ github.sha }}-20220222"
          restore-keys: "${{ steps.prep.outputs.key }}-buildx-${{ github.sha }}-20220222"

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build specific arch
        if: matrix.platform != 'multi' && steps.prep.outcome == 'success'
        uses: docker/build-push-action@v3
        with:
          push: true
          file: ./Dockerfile_${{ matrix.file }}
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.prep.outputs.ptags }}
          build-args: ${{ matrix.build_args }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
